apply plugin: 'com.android.library'
apply plugin: 'maven-publish'
apply plugin: 'signing'

android {
    // http://tools.android.com/tech-docs/new-build-system/tips
    //noinspection GroovyAssignabilityCheck
    compileSdkVersion rootProject.ext.compileSdkVersion
    //noinspection GroovyAssignabilityCheck
    buildToolsVersion rootProject.ext.buildToolsVersion

    lintOptions {
        abortOnError false
    }
    defaultConfig {
        minSdkVersion 9
        targetSdkVersion rootProject.ext.targetSdkVersion
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
}

apply from: new File(rootProject.projectDir, "tools/gradle-on-demand.gradle");


task androidJavadocs(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    android.libraryVariants.all { variant ->
        if (variant.name == 'release') {
            owner.classpath += variant.javaCompile.classpath
        }
    }
    exclude '**/R.html', '**/R.*.html', '**/index.html'
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    classifier = 'javadoc'
    from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

def libVersion = rootProject.ext.sdk.version
ext.isReleaseVersion = !libVersion.endsWith("SNAPSHOT")
publishing {
    publications {
        aar(MavenPublication) {
            groupId 'com.displaynote.thirdparty.android'
            artifactId 'ijkplayer-java'
            version libVersion
            artifact(androidSourcesJar)
            artifact(androidJavadocsJar)
            artifact file('build/outputs/aar/ijkplayer-java-release.aar')

            pom {
                name = 'ijkplayer'
                description = 'DisplayNote Link Android library'
                url = 'https://github.com/DisplayNote/ijkplayer'
                developers {
                    developer {
                        id = 'forlayo'
                        name = 'Miguel del Amor'
                        email = 'miguel.delamor@displaynote.com'
                    }
                }
            }

            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                configurations.implementation.allDependencies.withType(ModuleDependency) { ModuleDependency dp ->
                    if (dp.version != "unspecified") { // 过滤项目内library引用
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', dp.group)
                        dependencyNode.appendNode('artifactId', dp.name)
                        dependencyNode.appendNode('version', dp.version)

                        // for exclusions
                        if (dp.excludeRules.size() > 0) {
                            def exclusions = dependencyNode.appendNode('exclusions')
                            dp.excludeRules.each { ExcludeRule ex ->
                                def exclusion = exclusions.appendNode('exclusion')
                                exclusion.appendNode('groupId', ex.group)
                                exclusion.appendNode('artifactId', ex.module)
                            }
                        }
                    }
                }
            }
        }
    }
    repositories {
        maven {
            name = "DisplayNoteArtifactory"
            url = uri(System.getenv("AAR_DEPLOYER_URL"))
            credentials {
                username = System.getenv("AAR_DEPLOYER_USERNAME")
                password = System.getenv("AAR_DEPLOYER_PASSWORD")
            }
        }
    }
}

// signing {
//     if (isReleaseVersion) {
//         sign publishing.publications.aar
//     }
// }